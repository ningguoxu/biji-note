import{_ as s,c as i,a0 as t,o as e}from"./chunks/framework.CGHvQLJz.js";const c=JSON.parse('{"title":"开发者文档","description":"","frontmatter":{},"headers":[],"relativePath":"admin.md","filePath":"admin.md"}'),h={name:"admin.md"};function n(l,a,p,d,o,r){return e(),i("div",null,a[0]||(a[0]=[t('<h1 id="开发者文档" tabindex="-1">开发者文档 <a class="header-anchor" href="#开发者文档" aria-label="Permalink to &quot;开发者文档&quot;">​</a></h1><h2 id="常用标签" tabindex="-1">常用标签 <a class="header-anchor" href="#常用标签" aria-label="Permalink to &quot;常用标签&quot;">​</a></h2><h3 id="行内图片" tabindex="-1">行内图片 <a class="header-anchor" href="#行内图片" aria-label="Permalink to &quot;行内图片&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://s21.ax1x.com/2024/10/27/pA0u3qK.png&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> alt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;示例图片&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width:25px; vertical-align:middle; margin:0 5px; display:inline-block;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="如何部署" tabindex="-1">如何部署 <a class="header-anchor" href="#如何部署" aria-label="Permalink to &quot;如何部署&quot;">​</a></h2><h3 id="进入gist文件夹" tabindex="-1">进入gist文件夹 <a class="header-anchor" href="#进入gist文件夹" aria-label="Permalink to &quot;进入gist文件夹&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path/to/your/vitepress-project/gist</span></span></code></pre></div><h3 id="初始化git仓库" tabindex="-1">初始化git仓库 <a class="header-anchor" href="#初始化git仓库" aria-label="Permalink to &quot;初始化git仓库&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><h3 id="添加远程仓库" tabindex="-1">添加远程仓库 <a class="header-anchor" href="#添加远程仓库" aria-label="Permalink to &quot;添加远程仓库&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/username/repository.git</span></span></code></pre></div><p>请将 <code>https://github.com/username/repository.git</code> 替换为您的实际远程仓库地址。 确保在执行此命令前，仓库地址已在 GitHub 上创建完成。</p><h3 id="放到暂存区" tabindex="-1">放到暂存区 <a class="header-anchor" href="#放到暂存区" aria-label="Permalink to &quot;放到暂存区&quot;">​</a></h3><p>将 gist 文件夹中的所有文件添加到暂存区，执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><h3 id="提交更改" tabindex="-1">提交更改 <a class="header-anchor" href="#提交更改" aria-label="Permalink to &quot;提交更改&quot;">​</a></h3><p>将暂存区的更改提交至本地仓库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Add gist folder content for VitePress&quot;</span></span></code></pre></div><h3 id="推送至远程仓库" tabindex="-1">推送至远程仓库 <a class="header-anchor" href="#推送至远程仓库" aria-label="Permalink to &quot;推送至远程仓库&quot;">​</a></h3><p>最后，将更改推送至远程仓库的指定分支（一般为 main 或 master 分支）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><p>如果是master分支，请改为master</p><p>如果首次推送分支，可能需要执行 <code>git push -u origin main</code>，以便将本地分支与远程分支关联。</p>',23)]))}const g=s(h,[["render",n]]);export{c as __pageData,g as default};
